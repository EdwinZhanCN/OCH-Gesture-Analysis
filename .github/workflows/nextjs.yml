name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    # run all `run:` steps under web/
    defaults:
      run:
        working-directory: web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-pm
        run: |
          if [ -f yarn.lock ]; then
            echo "manager=yarn"    >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn"     >> $GITHUB_OUTPUT
          elif [ -f package.json ]; then
            echo "manager=npm"             >> $GITHUB_OUTPUT
            echo "command=ci"              >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "No lockfile found" >&2
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-pm.outputs.manager }}
          cache-dependency-path: |
            web/${{ 
              steps.detect-pm.outputs.manager == 'yarn' && 'yarn.lock' || 'package-lock.json'
            }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: web/.next/cache
          key: ${{ runner.os }}-nextjs-
            ${{ hashFiles('web/**/package-lock.json','web/**/yarn.lock') }}-
            ${{ hashFiles('web/**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-
              ${{ hashFiles('web/**/package-lock.json','web/**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-pm.outputs.manager }} ${{ steps.detect-pm.outputs.command }}

      - name: Build (static export)
        run: ${{ steps.detect-pm.outputs.runner }} next build

      # no `next export` step needed!

      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
